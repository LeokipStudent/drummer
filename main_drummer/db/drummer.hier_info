|drummer
SW[0] => reset.IN2
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
MAX10_CLK1_50 => MAX10_CLK1_50.IN2
GPIO[0] << noise_gen:noise.out
GPIO[1] << noise_gen:noise.out
GPIO[2] << noise_gen:noise.out
GPIO[3] << noise_gen:noise.out
GPIO[4] << noise_gen:noise.out
GPIO[5] << noise_gen:noise.out
GPIO[6] << noise_gen:noise.out
GPIO[7] << noise_gen:noise.out
GPIO[8] << <GND>
GPIO[9] << <GND>
GPIO[10] << <GND>
GPIO[11] << <GND>
GPIO[12] << <GND>
GPIO[13] << <GND>
GPIO[14] << <GND>
GPIO[15] << <GND>
GPIO[16] << <GND>
GPIO[17] << <GND>
GPIO[18] << <GND>
GPIO[19] << <GND>
GPIO[20] << <GND>
GPIO[21] << <GND>
GPIO[22] << <GND>
GPIO[23] << <GND>
GPIO[24] << <GND>
GPIO[25] << <GND>
GPIO[26] << <GND>
GPIO[27] << <GND>
GPIO[28] << <GND>
GPIO[29] << <GND>
GPIO[30] << <GND>
GPIO[31] << <GND>
GPIO[32] << <GND>
GPIO[33] << <GND>
GPIO[34] << <GND>
GPIO[35] << <GND>


|drummer|sine_gen:sine
reset => reset.IN1
sine_out[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
sine_out[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
sine_out[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
sine_out[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
sine_out[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
sine_out[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
sine_out[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
sine_out[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
clkIn => ~NO_FANOUT~


|drummer|sine_gen:sine|clkDivider:clkM
clk => outReg.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
reset => outReg.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
out <= outReg.DB_MAX_OUTPUT_PORT_TYPE


|drummer|noise_gen:noise
in[0] => Add0.IN11
in[0] => LessThan1.IN11
in[0] => Add1.IN16
in[1] => Add0.IN10
in[1] => LessThan1.IN10
in[1] => Add1.IN15
in[2] => Add0.IN9
in[2] => LessThan1.IN9
in[2] => Add1.IN14
in[3] => Add0.IN8
in[3] => LessThan1.IN8
in[3] => Add1.IN13
in[4] => Add0.IN7
in[4] => LessThan1.IN7
in[4] => Add1.IN12
in[5] => Add0.IN6
in[5] => LessThan1.IN6
in[5] => Add1.IN11
in[6] => Add0.IN5
in[6] => LessThan1.IN5
in[6] => Add1.IN10
in[7] => Add0.IN4
in[7] => LessThan1.IN4
in[7] => Add1.IN9
reset => reset.IN1
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN1


|drummer|noise_gen:noise|random:ran1
clk => q[0]~reg0.CLK
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => q[0]~reg0.PRESET


